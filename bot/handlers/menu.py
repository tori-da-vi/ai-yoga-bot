import logging
from aiogram import Router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from bot.handlers import workout
from bot.handlers import feedback
from bot.handlers import schedule
from bot.handlers import workout_history
from bot.handlers import coach

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

router = Router()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu
@router.message(Command("menu"))
async def show_menu(message: Message):
    logging.info("–ö–æ–º–∞–Ω–¥–∞ /menu –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º
    button1 = KeyboardButton(text="üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    button2 = KeyboardButton(text="üßòüèª –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞")  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    button3 = KeyboardButton(text="‚è∞ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
    button4 = KeyboardButton(text="üë©‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    button5 = KeyboardButton(text="ü™¨ –ö–æ—É—á")  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∫–æ—É—á–∞

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [button1, button2],  # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            [button3, button4],  # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
            [button5]  # –°—Ç—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
        ],
        resize_keyboard=True  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
@router.message(lambda message: message.text == "üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
async def schedule_button(message: Message):
    # –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /schedule –∏–∑ —Ñ–∞–π–ª–∞ schedule.py
    await schedule.schedule(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"
@router.message(lambda message: message.text == "üßòüèª –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞")
async def workout_button(message: Message):
    # –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /workout –∏–∑ —Ñ–∞–π–ª–∞ workout.py
    await workout.workout(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"
@router.message(lambda message: message.text == "‚è∞ –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫")
async def workout_history_button(message: Message):
    # –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /workoutHistory –∏–∑ —Ñ–∞–π–ª–∞ workout_history.py
    await workout_history.workout_history(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
@router.message(lambda message: message.text == "üë©‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
async def feedback_button(message: Message, state: FSMContext):
    # –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /feedback –∏–∑ —Ñ–∞–π–ª–∞ feedback.py
    await feedback.feedback(message, state)



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ö–æ—É—á"
@router.message(lambda message: message.text == "ü™¨ –ö–æ—É—á")
async def coach_button(message: Message):
    # –í—ã–∑–æ–≤ –∫–æ–º–∞–Ω–¥—ã /coach –∏–∑ —Ñ–∞–π–ª–∞ coach.py
    await coach.coach(message)

